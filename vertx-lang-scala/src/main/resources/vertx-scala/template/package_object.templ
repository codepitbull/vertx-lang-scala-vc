@if{incrementalIndex==0}
@code{
var fullPackage = type.module.translatePackageName('scala');
var splitted = fullPackage.split('\\.');
var moduleName = splitted[splitted.length - 1];
var modulePackage = fullPackage.replace('.'+moduleName,'');
}
/*\n
 * Copyright 2014 Red Hat, Inc.\n
 *\n
 * Red Hat licenses this file to you under the Apache License, version 2.0\n
 * (the "License"); you may not use this file except in compliance with the\n
 * License.  You may obtain a copy of the License at:\n
 *\n
 * http://www.apache.org/licenses/LICENSE-2.0\n
 *\n
 * Unless required by applicable law or agreed to in writing, software\n
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n
 * License for the specific language governing permissions and limitations\n
 * under the License.\n
 */\n\n

package @{modulePackage}\n

import scala.collection.JavaConverters._\n
import scala.compat.java8.FunctionConverters._\n
import io.vertx.lang.scala.HandlerOps._\n
import scala.reflect.runtime.universe._\n
import scala.concurrent.Promise\n
@if{type.name == 'io.vertx.core.Vertx'}
  import io.vertx.lang.scala.ScalaVerticle\n
@end{}

\n
package object @{moduleName}{\n
\n
@if{moduleName=="core"}
@includeNamed{'extensions/Json.templ'}
@end{}
@end{}

@comment{"# Template for DataObject code generation"}

@comment{"# Defines a few helper functions"}
@includeNamed{'scala-doc.templ'}
@includeNamed{'scala-imports.templ'}
@includeNamed{'scala-types.templ'}
@includeNamed{'scala-methods.templ'}

@if{type.kind == CLASS_DATA_OBJECT}
@includeNamed{'implicit_dataobject.templ'}
@else{}
@includeNamed{'class.templ'}
@end{}

@if{incrementalIndex==incrementalSize-1}
\n
}\n
@end{}
